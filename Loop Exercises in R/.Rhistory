knitr::opts_chunk$set(echo = TRUE)
for(i in 1:7){
print(i^2)
}
for(i in 1:7){
print(i^3)
}
for(i in colnames(iris)){
print(paste0(i, char(i)))
}
for(i in colnames(iris)){
print(paste0(i, nchar(i)))
}
for(i in colnames(iris)){
for(i in colnames(iris)){
print(paste0(i, " (", nchar(i), ")"))
}
for(i in colnames(iris)){
print(paste0(i, " (", nchar(i), ")"))
}
while(i < 1){
rnorm(1)
}
while(i < 1){
rnorm(1)
}
while(i < 1){
print(rnorm(1))
}
while(i < 1){
print(rnorm(i))
}
while (TRUE) {
x <- rnorm(1)
print(x)
if (x > 1) {
break
}
}
while(TRUE) {
x <- rnorm(1)
print(x)
if (x > 1) {
break
} if else(x < 0){
while(TRUE) {
x <- rnorm(1)
print(x)
if (x > 1) {
break
} else if(x < 0){
next
}
}
while(x > 0) {
x <- rnorm(1)
print(x)
if (x > 1) {
break
}
}
while(TRUE) {
x <- rnorm(1)
if (x > 1) {
break
} else if(x < 0){
next
} else{
print(x)
}
}
while(TRUE) {
x <- rnorm(1)
if (x > 1) {
break
} else if(x < 0){
next
} else{
print(x)
}
}
while(TRUE) {
x <- rnorm(1)
if (x > 1) {
break
} else if(x < 0){
next
} else{
print(x)
}
}
while(TRUE){
x <- rnorm(1)
if(x < 0){
next
} else if(x > 1){
break
} else {
print(x)
}
}
while (TRUE) {
x <- rnorm(1)
if (x < 0) {
next
}
print(x)
if (x > 1) {
break
}
}
outcomes <- numeric()
outcomes <- numeric()
for(i in 1:20){
outcomes[i] <- sample(x = c(1, 0), size = 1, prob = c(.5, 5))
}
outcome
outcomes
outcomes <- numeric()
for(i in 1:20){
outcomes[i] <- sample(x = c(1, 0), size = 1)
}
outcome
outcomes <- numeric()
for(i in 1:20){
outcomes[i] <- sample(x = c(1, 0), size = 1)
}
outcomes
matrix <- matrix(nrow = 5, ncol = 5)
matrix
for(i in 1:5){
for(j in 1:5){
matrix[i,j] <- 0:4
}
}
matrix
0:4
matrix <- matrix(nrow = 5, ncol = 5)
for(i in 1:5){
for(j in 1:5){
matrix[i,j] <- i
}
}
matrix
matrix <- matrix(nrow = 5, ncol = 5)
for(i in 0:4){
matrix[i, ] <- i
for(j in 0:4){
matrix[ ,j] <- j
}
}
matrix
matrix <- matrix(nrow = 5, ncol = 5)
for(i in 1:5){
for(j in 1:5){
matrix[i, j] <- abs(i - j)
}
}
matrix
1*2*3*4*5
target <- 10^8
product <- 1
n <- 0
target <- 10^8
product <- 1
n <- 0
while (product <= target) {
n <- n + 1
product <- product*n
}
n
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12
n <- n + 1
rm(list=ls())
product <- 1
n <- 0
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
product <- 1
n <- 0
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
n <- n + 1
product <- product*n
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
start_st <- 100
rm(x)
rm(x)
rm(star_st)
rm(start_st)
rnorm(1)
x <- 100
while(x < 150 | x > 50){
x <- x * rnorm(1)
}
rm(x)
set.seed(22)
price_start <- 100
price <- price_start
target_diff <- 50
n <- 0
while (abs(price_start - price) < target_diff) {
n <- n + 1
price <- price*(1 + rnorm(mean = 0, sd = 0.01, n = 1))
}
while(TRUE){
if(sample(c(1:10), 1, FALSE) != 5){
print(sample(c(1:10), 1, FALSE))
} else{
break
}
}
rm(list=ls())
?cat
x <- 0L
x <- scan()[1]
?scan
x <- 0L
while (TRUE) {
cat(
"I am thinking of a number between 1 and 10.",
"\nTake a guess and press enter twice!"
)
x <- scan()[1]
if (x == 5) {
cat("Right!")
break
}
cat("Wrong\n")
}
total <- 0
while (TRUE) {
if (!total %in% 0:4) {
total <- 0L
}
n <- sample(c(2:12), 2)
cat("What is the product of ", n[1], " and ", n[2], "?\n", sep = "")
x <- as.integer(readline())
if (x == prod(n)) {
total <- total + 1L
cat("Right!")
if (total == 5) break
cat(" You just need", 5 - total, "more answers.\n\n")
} else {
cat("Wrong\n")
}
}
readline()
total <- 0
while (TRUE) {
if (!total %in% 0:4) {
total <- 0L
}
n <- sample(c(2:12), 2)
cat("What is the product of ", n[1], " and ", n[2], "?\n", sep = "")
x <- as.integer(readline())
if (x == prod(n)) {
total <- total + 1L
cat("Right!")
if (total == 5) break
cat(" You just need", 5 - total, "more answers.\n\n")
} else {
cat("Wrong\n")
}
}
rm(list=ls())
for(i in 1:7){
print(i^3)
}
for(i in colnames(iris)){
print(paste0(i, " (", nchar(i), ")"))
}
while(TRUE) {
x <- rnorm(1)
print(x)
if (x > 1) {
break
}
}
while(TRUE){
x <- rnorm(1)
if(x < 0){
next
} else if(x > 1){
break
} else {
print(x)
}
}
outcomes <- numeric()
for(i in 1:20){
outcomes[i] <- sample(x = c(1, 0), size = 1)
}
outcomes
matrix <- matrix(nrow = 5, ncol = 5)
for(i in 1:5){
for(j in 1:5){
matrix[i, j] <- abs(i - j)
}
}
matrix
target <- 10^8
product <- 1
n <- 0
while (product <= target) {
n <- n + 1
product <- product*n
}
n
set.seed(22)
price_start <- 100
price <- price_start
target_diff <- 50
n <- 0
while (abs(price_start - price) < target_diff) {
n <- n + 1
price <- price*(1 + rnorm(mean = 0, sd = 0.01, n = 1))
}
